---
layout: post
title: Issue 54 - 15th January 2012
---

## Issue 54 - 15th January

I'm very glad the growing devops community seems largely to be made up of people with an open source ethic. Even more than usual over the last few weeks I've found my time saved by finding a useful library on Github and in more than one case pull requests have been sent and speedily accepted. I just wanted to say thank you to anyone maintaining a useful library or application before getting on with the newsletter.


Sponsor
======

Brightbox Cloud - the UK's only multi-zone cloud infrastructure service, is the new sponsor of Devops Weekly.

http://brightbox.com


News
====

At work recently I've been describing Jenkins as an automation framework as much as a continuous integration system. So it's good to read about others having success doing the same. Some good examples and discussion of when this is a good idea and when it's not.

http://morgajel.net/2011/12/12/1108


Just out today so I've not had a chance to listen yet, here's episode 1 of a new community podcast all about Chef. Good luck to the folks behind it.

http://www.foodfightshow.org/2012/01/episode-1-chef-in-2012.html


Quick fire series of articles focusing on the effect of latency on monitoring. It talks about why latency is a problem, how you might architect a system to avoid the problems and then onto a nicely worked example with lots of code.

http://holmwood.id.au/~lindsay/2012/01/09/monitoring-sucks-latency-sucks-more/
http://holmwood.id.au/~lindsay/2012/01/11/monitoring-system-equal-web-app-when-diagnosing-performance-bottlenecks/
http://holmwood.id.au/~lindsay/2012/01/13/instrumenting-your-monitoring-checks-with-new-relic/


Only a few weeks to go until FOSDEM and some of the tracks have started publishing schedules. The configuration management devroom isn't up yet, but the Development track has a devops flavoured talk and the virtualization and cloud devroom should be interesting.

http://fosdem.org/2012/schedule/track/virtualization_and_cloud_devroom
http://fosdem.org/2012/schedule/event/dev_to_devops


If you're ever tried to convince management that something is the way to do this post is worth reading. It's both a description, and a note sent to Yahoo's management about how Flickr achieved a good balance between speed and availability. In particular it stresses the importance that everyone owns availability, not just an operations team.

http://www.kitchensoap.com/2012/01/05/convincing-management-that-cooperation-and-collaboration-was-worth-it/


The term "devops" might still be relatively new, but that doesn't mean lots of relevant research and writing doesn't already exist. The collaboration aspect and wide scope of the domain can feel vague to some, Patrick here argues that's because it's a so called wicked problem. Some great resources linked from this post in particular.

http://jedi.be/blog/2012/01/08/devops-a-wicked-problem/


This post features a nice walk through the of main components in a large Java continuous delivery setup. Covers the virtualization platform, configuration management, load balancing, application server and deployment tools used.

http://blog.xebia.com/2011/12/14/continuous-delivery-for-enterprise-java-applications/


Automating DNS management is fun, and becoming increasingly easy with nice new DNS providers often publishing well designed web friendly APIs. This post features lots of examples using DNSimple, Ruby and Chef, but even if you're using a different stack it's still worth reading just for ideas.

http://jtimberman.housepub.org/blog/2012/01/02/switching-to-dnsimple/


Events
=====

Lots of Puppercamp events coming up in the first half of this year. Dates for Atalanta, Edinburgh and Stockholm have already been announced and details of some of the sessions in Atlanta on the 3rd of February are already available.

http://puppetlabs.com/blog/atlantapuppetcamp/
http://puppetlabs.com/community/puppet-camp/


Tools
====

Molog is another take on what to do with logs. It integrates heavily with logstash (for getting hold of logs) and nagios (for monitoring and altering). The command line tool for querying state looks useful too.

http://www.smetj.net/wiki/Molog_documentation


I found myself scraping the HTML from Nagios this last week to make a very quick dashboard. It's not like it's changed in the last 10 years so I reasoned it would be pretty stable. Then I came across Nagiosharder, a Ruby API build completely around a scraper, that exposes lots of the most common Nagios features.

https://github.com/railsmachine/nagiosharder


I'm a big fan of both Git and code reviews, but at times some of the code review tools can feel quite heavy wight. So for me Reviewthis looks excellent. It's a simple sinatra app you can run for free on Heroku and which lets you ask for reviews as part of commits.

https://github.com/supermatter/reviewthis
