--- 
layout: post
title: Issue 23 - 28th May 2011
---

h2. Issue 23 - 28th May 2011

_Another busy week on the internet, including a very interesting discussion about the state of monitoring on IRC and twitter using the tag #monitoringsucks. For those who missed it (or like me where asleep because it was the middle of the night) the IRC logs are available at https://github.com/monitoringsucks/irc-logs._


h2. News

A good story based article from an experienced agile consultant about the often fraught relationship between development and operations groups. Has some interesting things she has tried to encourage better understanding and communication.

"http://www.estherderby.com/2011/03/bridging-structural-conflict-same-and-different.html":http://www.estherderby.com/2011/03/bridging-structural-conflict-same-and-different.html

The Surge conference on scalability and performance is on again in September, and to show folks what it's all about they have kindly released last years speakers videos.

"http://omniti.com/surge/2010/speakers":http://omniti.com/surge/2010/speakers

Heroku suffered a DDOS attack last week and, after dealing with it, posted some interesting findings and recommendations. In particular they recommend against using bare domain names, instead always using subdomains that can be CNAME aliased to their proxy.

"http://status.heroku.com/incident/156":http://status.heroku.com/incident/156

The Agile Cambridge conference has a call for speakers out until the June 17th, and are specifically looking for Devops flavoured talks. Promoting this is only slightly self-centred, I live in Cambridge and like the idea of interesting folk coming to visit.

"http://www.agilecambridge.net/ac2011/speak.php":http://www.agilecambridge.net/ac2011/speak.php

Having something to aim for when you're building anything is useful, and this sort list outlines 7 levels of continuous integration. Worthwhile thinking about where you sit and how to reach the next tier.

"http://agile.dzone.com/news/7-levels-continuous":http://agile.dzone.com/news/7-levels-continuous

A well written article on common pitfalls when running HTTP load tests, done as a set of 10 things you should think about and ideally be doing. Especially useful if you're just starting to look at load testing.

"http://www.mnot.net/blog/2011/05/18/http_benchmark_rules":http://www.mnot.net/blog/2011/05/18/http_benchmark_rules

A good walk-though with code examples for managing a puppet workflow with Capistrano. Featuring the ability to deploy and easily rollback changes to different environments and making use of mcollective to trigger puppet runs across all your machines.

"http://www.threedrunkensysadsonthe.net/2011/05/deploy-and-roll-back-system-configs-with-capistrano-mcollective-and-puppet/":http://www.threedrunkensysadsonthe.net/2011/05/deploy-and-roll-back-system-configs-with-capistrano-mcollective-and-puppet/

More and more people seem to be intrigued with the possibilities of Noah, but most of the examples I've seen have been using Chef. James Turnbull has been putting together some Puppet based examples, including one that queries a Noah server for a host and uses the list of its services to specify which Puppet classes to use.

"http://www.kartar.net/2011/05/puppet-noah/":http://www.kartar.net/2011/05/puppet-noah/


h2. Tools

The OpenStack folks have been building their own message queuing system called Burrow aimed at being used in a multi-tenant system. They do a pretty good job of outlining why they went down this route rather than using an existing product.

"http://burrow.openstack.org/overview.html":http://burrow.openstack.org/overview.html

Hotspots is a very nice looking Rails profiling tool. Add some middleware to collect the data and then run the included command line tool to produce a very comprehensive report. I've been using request_log_analyzer recently too, and I'd love to see similar tools for other frameworks.

"https://github.com/tmm1/hotspots":https://github.com/tmm1/hotspots

A nice blog post by a member of the Economist development team on how they are using Selenium to test code on every commit. In particular they have written a simple PHP application to help with creating a X virtual frame buffer and then using ffmpeg to capture a video of all the tests run.

"http://codebaboon.com/economist-testing-drupal-using-selenium":http://codebaboon.com/economist-testing-drupal-using-selenium
"https://launchpad.net/selenium-zoetrope":https://launchpad.net/selenium-zoetrope

