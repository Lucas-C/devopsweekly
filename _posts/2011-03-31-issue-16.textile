--- 
layout: post
title: Issue 16 - 31st March 2011
---

h2. Issue 16 - 31st March 2011

_I'll start this issue with a bit of a call to action. It turns out that the Devops Wikipedia page needs some love. It's led to a few confused views this last week or so and as more and more people come across the term it's something folks will turn to. It would be great if the community chipped in on http://en.wikipedia.org/wiki/DevOps. Onwards to the real content._

h2. News

I always love posts where people describe, ideally with diagrams, how a system architecture works. Digg posted this interesting blog post this week doing just that. It goes into a little detail about the services they use and the technology stack they employ. More posts are promised as well.

"http://about.digg.com/blog/how-digg-is-built":http://about.digg.com/blog/how-digg-is-built

Patrick Debois has been pushing Vagrant in a small team setup and a complex application with great results. The post is a great walkthrough of the how and why, this some good observations about using a tool like vagrant in a team setting.

"http://jedi.be/blog/2011/03/28/using-vagrant-as-a-team/":http://jedi.be/blog/2011/03/28/using-vagrant-as-a-team/

I've been showing various people Chef recently and one problem a few people have commented on is the discoverability of some of the documentation. Sean OMeara pointed out that the docs are vast and broken up into many pages on the Opscode wiki and wrote up a great index along with a brief explanation of each of the main topics.

"http://blog.afistfulofservers.net/post/3889872012/a-can-of-condensed-chef-documentation":http://blog.afistfulofservers.net/post/3889872012/a-can-of-condensed-chef-documentation

One thing driving lots of the talk around devops is the move towards software as a service, whether that means inside a large company or paying a third party for an internet based setup. This post has some nice observations about the changes needed if you're more familiar with the more traditional software delivery process.

"http://omniti.com/seeds/from-making-software-to-running-saas":http://omniti.com/seeds/from-making-software-to-running-saas

R.I.Pienaar continues his self appointed task of making monitoring better. I'm liking the sound of a framework that can build monitoring systems, meaning you'll have to add code to the mix to get something useful but that should be specific to your needs, and able to evolve with you over time. 

"http://www.devco.net/archives/2011/03/25/monitoring_framework_event_correlation.php":http://www.devco.net/archives/2011/03/25/monitoring_framework_event_correlation.php

Nice writeup of DevOps ATL in Atlanta. Some good points about how particular pain points and skunkworks projects, especially in larger more formal organisations, can help embed newer practices.

"http://www.puppetlabs.com/blog/the-state-of-devops-down-south-tips-on-deploying-devops-practices/":http://www.puppetlabs.com/blog/the-state-of-devops-down-south-tips-on-deploying-devops-practices/

I always like being reminded why something is important. These slides on continuous integration are a good read, or maybe something to sent to your boss or colleagues who are interested in the subject.

"http://www.slideshare.net/o19s/turbocharge-your-automated-tests-with-ci":http://www.slideshare.net/o19s/turbocharge-your-automated-tests-with-ci

h2. Tools

Twitter released the Murder deployment tool using BitTorrent a while ago. Russ Garrett has just released a Python variant of the idea, but with fewer opinions about how you'll use it. As Russ put it "It was designed for pushing code out to a number of production systems. You can probably use it for other things."

"https://github.com/russss/Herd":https://github.com/russss/Herd
