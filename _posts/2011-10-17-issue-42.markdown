--- 
layout: post
title: Issue 42 - 17th October 2011
---

## Issue 42 - 17th October

A day late but hopefully the extra content will placate any angry
readers. I just got back from another excellent Devopsdays event, this
time in Sweden. Thanks hugely to Patrick, Ulf and all those involved in
organising, speaking and participating. For those that couldn't make it
here are lots of the slides, and a few notes from some of the open
spaces.


Devopsdays
=========

Definitely one of the highlights of the event was the talk from
Mitchell Hashimoto (of Vagrant fame). It stresses that all the many
things we put under the devops banner exist on a scale and talks about
the order you might try and implement many of the things we talk about.

http://speakerdeck.com/u/mitchellh/p/the-wide-range-of-devops


Julian Simpson and Tom Sulston gave one of the talks in Sweden, entitled
everything I know about continuous integration I learned from System
Administration. It has a number of good takeaway points about how you
may be going about CI. The slides only tell part of the story so watch
out for the video.

http://www.build-doctor.com/2011/10/17/everything-i-know-about-continuous-integration-i-learned-from-systems-administration/


John Vincent's talk stressed the importance of tools, at least some of
the time anyway. The talk took a number of common areas of operations
(configuration management, packaging, monitoring, etc.) and tried to
show a before and after snapshot.

http://speakerdeck.com/u/lusis/p/sometimes-tools-matter


One of the Ignite talks by Michael Brunton-Spall from The Guardian
seemed to entertain most of the audience. It's a lightning quick tale of
a real project with a number of ups and downs, all talking place over a
matter of days. A good talk developer to developer to challenge
assumptions.

http://www.slideshare.net/mibuk/ignitedevopsdays-why-devs-need-ops


Another of the lightning talks was on ITIL and Devops. The presenter has
nicely made available both the slides and the notes, which at least
until the video is available, make interesting reading.

http://rslomkow.org/share/963830F6-B592-4B41-ACE7-ED4344D9FFDB/ITIL-for-agile-notes.pdf


One of the open spaces I missed has already been well written up. This
one covered Java application development and for those involved in that
topic every day this sounded excellent.

http://www.mccartney.ie/wordpress/2011/10/246/


One of the other open spaces covered tools people where finding useful.
This post includes links to all of them, a good 40 or 50 in total. Not
all of them I'm convinced by but it's a good starting place for some
research if you like keeping up.

http://paperairoplane.net/?p=320


News
====


If all the Devopsdays content isn't enough, all of the videos from
Puppetconf are now available. The talks I saw were excellent, and I'm
hoping to find time to catch all the ones in the tracks I didn't get
along to. Lots of good puppet content, plus a good number of talks
relevant to everyone.

http://puppetlabs.com/blog/videos-from-puppetconf-available/


A good long explanation of why to choose Chef, which (apart from the
many good examples) is really a solid argument for any form of
configuration management. The good points and bad give it balance and
the mythbusting is welcome (in particular in light of some of the
comments anyway).

http://devopsanywhere.blogspot.com/2011/10/why-chef.html


Devopsdays was definitely a practitioners conference, so it's still
great to see articles like this one, covering what Devops is and why you
should care. It's main points are around host devops approaches can work
in agile software teams, with the main emphasis on getting development
and operations together rather than pitting then against each other.

http://agileelephant.blogspot.com/2011/09/introduction-to-devops.html?m=1


A rather provocative post suggesting an end to the Sysadmin within 10
years. Some of the points are obvious, but I think it's more about
evolution and increasing specialisation (not everything is a web
application for instance). Lots of comments too which make for some
interesting points amongst the rest.

http://peebs.org/ill-probably-never-hire-another-pure-sysadmin


Mozilla are interesting in that the majority of the code they produce is
open source. Getting in-house developers up and running can be tricky in
some organisation, but Mozilla want to encourage external developers
too. This post covers that problem, and the current solution using
Vagrant to distribute a virtual machine that anyone can get start with.

http://blog.mozilla.com/webdev/2011/10/04/developing-with-vagrant-puppet-and-playdoh/


Late night deployments are generally a bad idea and a sign of other
wider issues. This post does a fantastic job of taking all the reasons
you probably do it and debunking them, in particular with examples of
using feature flags to solve some time depend events.

http://briancrescimanno.com/2011/09/29/why-are-you-still-deploying-overnight/


If you're using EC2 and you can't get your instances booted quickly
because of the time taken for a configuration management run this
approach might be of interest. It's demonstrating a puppet module which
can be used to keep a set of AMI images up to date with puppet
manifests, so when you boot new instances they are already bang up to
date.

http://puppetlabs.com/blog/rapid-scaling-with-auto-generated-amis-using-puppet/


Tools
====

As I've been using Vagrant and doing Ruby development a few people have
asked how I open the source of gems on the guest. Actually I just use
vim all the time on the virtual machine but if you're happier with
Textmate or and IDE of some description running on the host then vagrant
bundler tools is for you.

https://github.com/mocoso/vagrant-bundler-tools


Statsd, the stats aggregation tool for Graphite from Etsy, is very nice.
But some folks just aren't happy or able to run Node.js applications.
Statsite is a Python implementation of the tool that supports all the
Graphite data types.

https://github.com/kiip/statsite


Fig describes itself as a utility for configuring environments and
managing dependencies across a team of developers. It's something like
Apache Ivy, but not just for Java applications.

https://github.com/mfoemmel/fig
