--- 
layout: post
title: Issue 21 - 14th May 2011
---

h2. Issue 21 - 14th May 2011

_A few days late but a bit of a bumper issue. We've also passed the 1000th subscriber so welcome to everyone who has joined recently._

h2. News

Devopsdays Boston have released all the videos from the talks given so if you could'nt make it along you can catch up on topics ranging from culture to devops in government and much talk of deployment.

"http://www.devopsdays.org/events/2011-boston/program/":http://www.devopsdays.org/events/2011-boston/program/

A few people have started producing Chef recipes and Puppet manifests for installing the full Cloudfoundry vcap stack. I'm much more interested in Vcap that I am another hosted platform and the easier it is to get up and running the better.

"https://github.com/auser/cloudfoundry-quickstart":https://github.com/auser/cloudfoundry-quickstart
"http://www.kartar.net/2011/05/install-cloud-foundry-vcap-via-puppet/":http://www.kartar.net/2011/05/install-cloud-foundry-vcap-via-puppet/

In any distributed system you need a mechanism for the various components to transfer and exchange date efficiently. Both Protocol Buffers (from Google) and Thrift (originally developed at Facebook and now under the Apache banner) are solutions to this problem worth knowing about, and this article does a good job of comparing the technical details of the two.

"http://floatingsun.net/articles/thrift-vs-protocol-buffers/":http://floatingsun.net/articles/thrift-vs-protocol-buffers/

Testing Javascript automatically has often been problematic. The folk at Zendesk have written up how they approach the problem using Jenkins, Jasmine, PhantomJS and JSHint. The post includes some useful rake tasks that you can use to do the same.

"http://www.zendesk.com/blog/javascript-loves-ci":http://www.zendesk.com/blog/javascript-loves-ci

Patrick Debois unfortunately missed giving his presentation at goto this last week, but has kindly made the slides available anyway. Damn Abstraction : Development vs Operational Efficiency goes over the the many abstractions we introduce to software projects and management.

"http://www.slideshare.net/jedi4ever/damn-abstraction-development-vs-operational-efficiency":http://www.slideshare.net/jedi4ever/damn-abstraction-development-vs-operational-efficiency

Continuous deployment doesn't have to be hard argues John Wedgwood, with a good post about getting started with a minimum amount of fuss and configuration.

"http://www.johnwedgwood.com/continuous-deployment":http://www.johnwedgwood.com/continuous-deployment

As a counter point to the above article Jim Bird argues that not only is continuous deployment hard in many environments, it's also not always a good idea. I liked this in particular because it doesn't focus on the technical problems as much as the process, security and external relations side of deployments.

"http://swreflections.blogspot.com/2011/05/continuous-deployment-is-no-holy-grail.html":http://swreflections.blogspot.com/2011/05/continuous-deployment-is-no-holy-grail.html

Richard Crowley wrote a great article I missed at the start of the year. Arguing good packaging is a thing of beauty and releasing a nifty tool (Debra) which looks a very simple way of approaching the Debian packaging problem.

"http://rcrowley.org/articles/packaging.html":http://rcrowley.org/articles/packaging.html
"http://rcrowley.org/articles/debra.html":http://rcrowley.org/articles/debra.html

Puppet has been around for a good while now and it's nice to see more and more people writing up good advice. The main thing I took away from this particular article was that learning the whole puppet language, and how to extend it, is a good way of really getting the most out of the tool.

"http://nuknad.com/2011/05/10/puppet-lessons-learned/":http://nuknad.com/2011/05/10/puppet-lessons-learned/


h2. Tools

Test::Right is described as an opinionated Selenium testing framework. It's from the folks at Sauce Labs who know a few things about functional testing and aims to lay lots of useful groundwork for writing this sort of test, avoiding many of the common maintenance and tight coupling pitfalls.

"https://github.com/saucelabs/test_right":https://github.com/saucelabs/test_right

People occasionally comment on the large dependency chain that the Chef server has, and Fatty, from the the Opscode folk, looks to be their answer to this. It appears to be a generic tool that allows for creating a single installable
shell-script that can be executed on the client side. Interesting for some usecases.

"https://github.com/adamhjk/fatty":https://github.com/adamhjk/fatty

Migrating large databases is hard work, but the folks at Sound Cloud have started releasing some of the tools they've been having success with, entertainingly nicknamed the Large Hadron Migrator.

"http://backstage.soundcloud.com/2011/05/introducing-the-large-hadron-migrator-3/":http://backstage.soundcloud.com/2011/05/introducing-the-large-hadron-migrator-3/

Ever wondering what in the network stack is taking up the time for a given HTTP request? Ruok looks a pretty handy little tool for making multiple requests and displaying the time taken for things like DNS lookup, waiting for a connection or SSL.

"https://github.com/fr0stbyte/ruok":https://github.com/fr0stbyte/ruok

